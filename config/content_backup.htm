<h1>Welcome</h1>
<p>首先是這個衝突(這是新版本內容)</p>
<p>終於要來處理衝突了(這是產生衝突的版本內容)</p>
<p>CMSimfly(<a href="https://github.com/chiamingyen/cmsimfly">https://github.com/chiamingyen/cmsimfly</a>)是一套簡單的網際內容管理系統,採用Flask網際框架,以Beautifulsoup解讀分業內容</p>
<p><img alt="" height="238" src="/images/th (2).jpg" width="422"/></p>
<h1>ROC Flag</h1>
<p><img alt="" height="400" src="/images/下載 (1).png" width="600"/></p>
<!-- 導入 Brython 標準程式庫 -->
<script src="/get_page/cmsimde/static/brython.js"></script>
<script src="/get_page/cmsimde/static/brython_stdlib.js"></script>
<h1>GAME1</h1>
<p></p>
<h1>GAME2</h1>
<h1>WEEK4</h1>
<p><span>此處所謂的靜態網際內容管理指 </span><a href="https://pages.github.com/">Github Pages</a><span><span> </span>目前只允許伺服倉儲中特定分支的特定目錄中的超文件, 亦即<span> </span></span><a href="https://en.wikipedia.org/wiki/HTML">Html</a><span><span> </span>檔案與<span> </span></span><a href="https://en.wikipedia.org/wiki/JavaScript">Javascript</a><span><span> </span>程式檔案, 而 CMSimfly 的靜態網頁就是利用 Python 程式, 設法將原本的動態網站系統的內容轉為超文件與 Javascript 後, 單獨儲存在 content 目錄下, 然後透過倉儲根目錄中的 index.html 進行跳轉至 content/index.html, 但是 CMSimfly 倉儲中仍然保留所有動態系統的 Python 程式與設定, 可上傳至其他支援執行 Python 的網際應用伺服器 (例如:<span> </span></span><a href="https://www.heroku.com/">Heroku</a><span>), 並以動態的網站格式型態, 讓管理者登入進行內容管理.</span><br/><br/><span>之後, 我們將以 Github 倉儲中的資料版本為主, 設法在各用戶的近端可攜環境中進行版本管理, 然後再同步到<span> </span></span><a href="https://www.heroku.com/">Heroku</a><span><span> </span>動態網站, 或其他自架的網站.</span></p>
<h1>WEEH5</h1>
<p>加入相關內容:<span>導入 Ungit、利用<a href="http://mde.tw/wcm2019/content/%E5%AF%A6%E7%BF%92%E9%A0%85%E7%9B%AE%E4%BA%8C.html"> kungit.bat</a> 在倉儲目錄中啟用 ungit、自製可攜系統、納入 <a href="https://getsharex.com/">ShareX</a> 的可攜系統、建立 <a href="https://www.blogger.com/">Blogger</a> 網誌、建立 Github 倉儲、建立 <a href="https://pages.github.com/">Github Pages</a> 網站、利用 <a href="https://github.com/chiamingyen/cmsimfly">CMSimfly</a> 以及 <a href="https://pages.github.com/">Github Pages</a> 建立網際內容管理系統、以 ssh 連線對 Github 倉儲改版、加入 y:\home\.ssh\config 設定, 讓 ssh 連線透過 Proxy Server 擷取資料以及IPv6 環境設定與 Git 操作設定。</span></p>
<p><span>進度內容及影片取自</span><a href="https://2019wcm.blogspot.com/">https://2019wcm.blogspot.com/</a><span>網際內容管理網誌。</span></p>
<h1>WEEK8</h1>
<h1>期中影片</h1>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/B4rQe7V0Vck" width="560"></iframe></p>
<p>
<script type="text/python">// <![CDATA[
# 導入 doc
from browser import document as doc
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")
# 進行座標轉換, x 軸不變, y 軸反向且移動 canvas.height 單位光點
# ctx.setTransform(1, 0, 0, -1, 0, canvas.height)
# 以下採用 canvas 原始座標繪圖
flag_w = canvas.width
flag_h = canvas.height
circle_x = flag_w/4
circle_y = flag_h/4
# 先畫滿地紅
ctx.fillStyle='rgb(255, 0, 0)'
ctx.fillRect(0,0,flag_w,flag_h)
# 再畫青天
ctx.fillStyle='rgb(0, 0, 150)'
ctx.fillRect(0,0,flag_w/2,flag_h/2)
# 畫十二道光芒白日
ctx.beginPath()
star_radius = flag_w/8
angle = 0
for i in range(24):
    angle += 5*math.pi*2/12
    toX = circle_x + math.cos(angle)*star_radius
    toY = circle_y + math.sin(angle)*star_radius
    # 只有 i 為 0 時移動到 toX, toY, 其餘都進行 lineTo
    if (i):
        ctx.lineTo(toX, toY)
    else:
        ctx.moveTo(toX, toY)
ctx.closePath()
# 將填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
# 白日:藍圈
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w*17/240, 0, math.pi*2, True)
ctx.closePath()
# 填色設為藍色
ctx.fillStyle = 'rgb(0, 0, 149)'
ctx.fill()
# 白日:白心
ctx.beginPath()
ctx.arc(circle_x, circle_y, flag_w/16, 0, math.pi*2, True)
ctx.closePath()
# 填色設為白色
ctx.fillStyle = '#fff'
ctx.fill()
// ]]></script>
</p>