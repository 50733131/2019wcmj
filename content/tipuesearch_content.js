var tipuesearch = {"pages": [{'title': 'Welcome', 'text': '首先是這個衝突(這是新版本內容) \n 終於要來處理衝突了(這是產生衝突的版本內容) \n CMSimfly( https://github.com/chiamingyen/cmsimfly )是一套簡單的網際內容管理系統,採用Flask網際框架,以Beautifulsoup解讀分業內容 \n \n', 'tags': '', 'url': 'Welcome.html'}, {'title': 'ROC Flag', 'text': '\n', 'tags': '', 'url': 'ROC Flag.html'}, {'title': '近端配置與管理', 'text': 'chrome pyoxy \n \n mde.tw \n \n github.com \n \n git add . \n \n git commit\xa0 -m"名稱" \n \n git push \n \n SSHkey \n \n  導入 Brython 標準程式庫  \n \n', 'tags': '', 'url': '近端配置與管理.html'}, {'title': 'GAME1', 'text': '\n \n \xa0 \n \n  Your browser doesn\'t support the HTML5 element canvas.      Throw dice  \n Stage:   Point:   Outcome: <input name="outcome" type="text" value="', 'tags': '', 'url': 'GAME1.html'}, {'title': 'GAME2', 'text': '\n \n Try it \n \n', 'tags': '', 'url': 'GAME2.html'}, {'title': 'WEEK4', 'text': '此處所謂的靜態網際內容管理指\xa0 Github Pages \xa0 目前只允許伺服倉儲中特定分支的特定目錄中的超文件, 亦即 \xa0 Html \xa0 檔案與 \xa0 Javascript \xa0 程式檔案, 而 CMSimfly 的靜態網頁就是利用 Python 程式, 設法將原本的動態網站系統的內容轉為超文件與 Javascript 後, 單獨儲存在 content 目錄下, 然後透過倉儲根目錄中的 index.html 進行跳轉至 content/index.html, 但是 CMSimfly 倉儲中仍然保留所有動態系統的 Python 程式與設定, 可上傳至其他支援執行 Python 的網際應用伺服器 (例如: \xa0 Heroku ), 並以動態的網站格式型態, 讓管理者登入進行內容管理. 之後, 我們將以 Github 倉儲中的資料版本為主, 設法在各用戶的近端可攜環境中進行版本管理, 然後再同步到 \xa0 Heroku \xa0 動態網站, 或其他自架的網站. \n', 'tags': '', 'url': 'WEEK4.html'}, {'title': 'WEEH5', 'text': '加入相關內容: 導入 Ungit、利用 \xa0kungit.bat \xa0在倉儲目錄中啟用 ungit、自製可攜系統、納入\xa0 ShareX \xa0的可攜系統、建立\xa0 Blogger \xa0網誌、建立 Github 倉儲、建立\xa0 Github Pages \xa0網站、利用\xa0 CMSimfly \xa0以及\xa0 Github Pages \xa0建立網際內容管理系統、以 ssh 連線對 Github 倉儲改版、加入 y:\\home\\.ssh\\config 設定, 讓 ssh 連線透過 Proxy Server 擷取資料以及IPv6 環境設定與 Git 操作設定。 \n 進度內容及影片取自 https://2019wcm.blogspot.com/ 網際內容管理網誌。 \n', 'tags': '', 'url': 'WEEH5.html'}, {'title': 'WEEK8', 'text': '', 'tags': '', 'url': 'WEEK8.html'}, {'title': '期中影片', 'text': '\n \n \n', 'tags': '', 'url': '期中影片.html'}]};