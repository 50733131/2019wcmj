var tipuesearch = {"pages": [{'title': 'Welcome', 'text': '首先是這個衝突(這是新版本內容) \n 終於要來處理衝突了(這是產生衝突的版本內容) \n CMSimfly( https://github.com/chiamingyen/cmsimfly )是一套簡單的網際內容管理系統,採用Flask網際框架,以Beautifulsoup解讀分業內容 \n \n', 'tags': '', 'url': 'Welcome.html'}, {'title': 'ROC Flag', 'text': '\n  啟動 Brython  \n \n \n \n \n \n W14 <<  Previous \n  footer  \n \n \n  Link back to Colorlib can\'t be removed. Template is licensed under CC BY 3.0.   Copyright ©\n \nAll rights reserved | This template is made with   by  Colorlib    Link back to Colorlib can\'t be removed. Template is licensed under CC BY 3.0.  \n \n \n  for footer  \n \n  for site wrap  \n \n  <script src="../static/chimper/js/jquery-3.3.1.min.js"></script>  \n \n \n \n \n \n \n \n \n \n \n \n            <script src="./../static/chimper/js/typed.js"></script>\n                    <script>\n                    var typed = new Typed(\'.typed-words\', {\n                    strings: ["Web Apps"," WordPress"," Mobile Apps"],\n                    typeSpeed: 80,\n                    backSpeed: 80,\n                    backDelay: 4000,\n                    startDelay: 1000,\n                    loop: true,\n                    showCursor: true\n                    });\n                    </script>\n             \n', 'tags': '', 'url': 'ROC Flag.html'}, {'title': '近端配置與管理', 'text': 'chrome pyoxy \n \n mde.tw \n \n github.com \n \n git add . \n \n git commit\xa0 -m"名稱" \n \n git push \n \n SSHkey \n \n Newwork Connect \n \n \n \n', 'tags': '', 'url': '近端配置與管理.html'}, {'title': '倉儲改版指令', 'text': '指令解釋 git add \xa0可以用來新增一個檔案, 數個檔案, 或在之前提交後所新增的所有內容. git add 在 GIT 架構下, 是對所新增或修改的內容拍快照: git commit -"改版說明訊息" \xa0執行之前, 必須使用 git config 建立臨時或永久的身分註記, 因為 GIT 在展開所有改版內容時, 必須明確登錄這些變更的作者與時間. 當使用者採用 git commit -m "改版說明訊息", 此次提交到 .git 目錄下的更動內容, 均會綁定使用者身分與改版所輸入的說明訊息. git push \xa0在隨後沒有輸入遠端 URL 代號時, 表示要推送到 origin, 若透過 git remote add 設定其他代號與 URL 對應時, git push 加上代號, 就可以將此次的提交內容, 推送到指定的 URL 所在遠端倉儲.\xa0 \n', 'tags': '', 'url': '倉儲改版指令.html'}, {'title': '配置可攜程式環境', 'text': '取得 Windows 10 64 位元環境下的可攜程式環境 (下載\xa0 2019_cdb_w5.7z), 下載後解開目錄, 放入 USB3.0 規格以上的隨身碟或隨身硬碟. 以滑鼠點擊 start.bat 開啟可攜隨身系統, 以 stop.bat 關閉可攜隨身系統, \xa0 隨身碟必須在關閉所有應用程式執行下, 才可正常退出. 了解基本的 DOS (Disk Operating System) 指令 C:\\> 符號為 DOS 命令列視窗的回應 , 表示目前在 C 槽硬碟的 \\ 根目錄, 若要切換到 Y 槽, 則在電腦的回應後, 輸入 Y:, 命令列將轉為 Y:\\> 若要 更換目錄 , 則使用 \xa0 cd ,例如: \xa0 Y:\\>cd tmp 表示要從 Y 槽的根目錄更換到 tmp 目錄, 也就是\xa0 Y:\\tmp> 若要再回到 Y 槽的根目錄, 可以使用 cd .. 表示要從目前所在目錄, 往上跳回一個目錄, 也就是重新回到 Y 槽的根目錄. 另外, 無論目前位於哪一個子目錄, 也可以使用 cd \\ 直接回到根目錄. 或者從 \xa0 Y:\\> 直接使用 cd \\tmp\\repo\\ssh\\wcm2019 直接從 Y 槽的根目錄, 跳進 Y:\\tmp\\repo\\ssh\\wcm2019> 此外, 常用的 DOS 指令有: dir \xa0 - 列出目前所在目錄的內容 mkdir \xa0- 隨後加上要建立目錄的名稱, 可以建立目錄 \n cls \xa0-清除目前的命令列顯示的內容 \n \n \xa0 \n  導入 Brython 標準程式庫  \n \n', 'tags': '', 'url': '配置可攜程式環境.html'}, {'title': 'GAME1', 'text': '\n \n \xa0 \n \n  Your browser doesn\'t support the HTML5 element canvas.      Throw dice  \n Stage:   Point:   Outcome: <input name="outcome" type="text" value="', 'tags': '', 'url': 'GAME1.html'}, {'title': 'GAME2', 'text': '\n Try it \n \n', 'tags': '', 'url': 'GAME2.html'}, {'title': 'WEEK4', 'text': '此處所謂的靜態網際內容管理指\xa0 Github Pages \xa0 目前只允許伺服倉儲中特定分支的特定目錄中的超文件, 亦即 \xa0 Html \xa0 檔案與 \xa0 Javascript \xa0 程式檔案, 而 CMSimfly 的靜態網頁就是利用 Python 程式, 設法將原本的動態網站系統的內容轉為超文件與 Javascript 後, 單獨儲存在 content 目錄下, 然後透過倉儲根目錄中的 index.html 進行跳轉至 content/index.html, 但是 CMSimfly 倉儲中仍然保留所有動態系統的 Python 程式與設定, 可上傳至其他支援執行 Python 的網際應用伺服器 (例如: \xa0 Heroku ), 並以動態的網站格式型態, 讓管理者登入進行內容管理. 之後, 我們將以 Github 倉儲中的資料版本為主, 設法在各用戶的近端可攜環境中進行版本管理, 然後再同步到 \xa0 Heroku \xa0 動態網站, 或其他自架的網站. \n', 'tags': '', 'url': 'WEEK4.html'}, {'title': 'WEEH5', 'text': '加入相關內容: 導入 Ungit、利用 \xa0kungit.bat \xa0在倉儲目錄中啟用 ungit、自製可攜系統、納入\xa0 ShareX \xa0的可攜系統、建立\xa0 Blogger \xa0網誌、建立 Github 倉儲、建立\xa0 Github Pages \xa0網站、利用\xa0 CMSimfly \xa0以及\xa0 Github Pages \xa0建立網際內容管理系統、以 ssh 連線對 Github 倉儲改版、加入 y:\\home\\.ssh\\config 設定, 讓 ssh 連線透過 Proxy Server 擷取資料以及IPv6 環境設定與 Git 操作設定。 \n 進度內容及影片取自 https://2019wcm.blogspot.com/ 網際內容管理網誌。 \n', 'tags': '', 'url': 'WEEH5.html'}, {'title': 'WEEK8', 'text': '進度內容及影片取自 https://2019wcm.blogspot.com/ 網際內容管理網誌。 \n \n \n', 'tags': '', 'url': 'WEEK8.html'}, {'title': 'WEEK10', 'text': '進度內容及影片取自 https://2019wcm.blogspot.com/ 網際內容管理網誌。 \n \n \n', 'tags': '', 'url': 'WEEK10.html'}, {'title': 'WEEK12', 'text': '進度內容及影片取自 https://2019wcm.blogspot.com/ 網際內容管理網誌。 \n', 'tags': '', 'url': 'WEEK12.html'}, {'title': 'WEEK15', 'text': '本周內容: \n 1. TWAREN SSL-VPN連線安裝教學 \n 2.VirtualBox設定教學 \n 3.下載filezilla，將檔案傳送到虛擬主機資料夾。 \n 4.介紹可利用學校網站下載校園授權軟體(限校內ip)', 'tags': '', 'url': 'WEEK15.html'}, {'title': 'VirtualBox', 'text': '利用 Virtualbox 建立虛擬 Ubuntu 18.04 網際內容管理系統伺服主機: 1. 安裝最新版的 Virtualbox\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 2. 建立 Ubuntu 18.04 虛擬主機\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 3. 以網路卡橋接啟動 Ubuntu 伺服器\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 4. 以 sudo apt install nginx 安裝 nginx WWW 伺服器\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0 5. 以 ifconfig 查 Ubuntu 伺服器的 IP, 測試 nginx 伺服器是否可以連線\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 6. 以 Windows 10\xa0 下的 Filezilla client, 將編輯好的 nginx 設定檔案送到 Ubuntu\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 7.\xa0利用 Ubuntu 指令將設定檔案搬至設定位置後, 以 /etc/init.d/nginx restart 重新啟動\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 nginx\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 8 . 在 Ubuntu 中以 sudo apt install uwsgi 安裝 uwsgi\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0 9. 在 Windows 10 編輯 uwsgi 與 nginx 所需的設定檔案, 完成後以 filezilla 送至 Ubuntu.\xa0 \xa0 \xa0 \xa0\xa0 10. 將 CMSimfly 程式碼送到 Ubuntu 伺服器中對應目錄後.\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\xa0 11. 在 Ubuntu 建立 cmsimfly 服務, 並設定隨機啟動.\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 12. 完成後, 在 Windows 10 以瀏覽器連線至 CMSimfly, 確認動態網頁與靜態網頁可以在\xa0 \xa0 \xa0 \xa0 \xa0 虛擬主機中正常啟動. \n 創建名字 \n \n 4096MB大小 \n \n 點選中間的選項,並按Create \n \n 改為500GB \n \n 點選VMDK \n \n 創建好後按啟動，選擇已下載好的檔案並創建 \n \n 打ifconfig查詢IP位置 \n \n 再將編輯好的 nginx 設定檔案送到 Ubuntu \n \n \n \n', 'tags': '', 'url': 'VirtualBox.html'}, {'title': '上傳youtube影片', 'text': '\n 程式碼 \n <h1>影片名字</h1> <p>影片的嵌入連結</p>', 'tags': '', 'url': '上傳youtube影片.html'}, {'title': '期中影片', 'text': '\n', 'tags': '', 'url': '期中影片.html'}, {'title': '期末影片', 'text': '\n \n', 'tags': '', 'url': '期末影片.html'}]};