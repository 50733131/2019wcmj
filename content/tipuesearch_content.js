var tipuesearch = {"pages": [{'title': 'Welcome', 'text': '首先是這個衝突(這是新版本內容) \n 終於要來處理衝突了(這是產生衝突的版本內容) \n CMSimfly( https://github.com/chiamingyen/cmsimfly )是一套簡單的網際內容管理系統,採用Flask網際框架,以Beautifulsoup解讀分業內容 \n \n 內建密碼:admin \n 改版----先打git add .\xa0 \xa0 \xa0 \xa0 再打git commit -m"名稱"\xa0 \xa0 \xa0 \xa0 \xa0之後就打git push \n git push 完之後要等一下下(5~10分鐘左右),再重新整理就可以看到改過的畫面了。 \n \n 亂碼器程式碼:<h3>game2</h3> <p><strong><button onclick="myFunction()">Try it</button></strong></p> <p id="demo"><img alt="" height="234" src="./../images/th.jpg" width="293"></p> <p><strong>1~100隨機選號</strong></p> <script>// <![CDATA[ function myFunction() {  document.getElementById("demo").innerHTML = Math.floor(Math.random()*100+1); } // ]]></script> \n 骰子遊戲程式碼:<h2>game1</h2> <p>&nbsp;<img alt="" height="273" src="./../images/th (5).jpg" width="485"></p> <script type="text/javascript">// <![CDATA[ var cwidth = 400;  var cheight = 300;  var dicex = 50;  var dicey = 50;  var dicewidth = 100;  var diceheight = 100;  var dotrad = 6;  var ctx;  var dx;  var dy;  var firstturn = true;  var point; function throwdice() {  var sum;  var ch = 1+Math.floor(Math.random()*6);  sum = ch;  dx = dicex;  dy = dicey;  drawface(ch);  dx = dicex + 150;  ch=1 + Math.floor(Math.random()*6);  sum += ch;  drawface(ch);  if (firstturn) {  switch(sum) {  case 7:  case 11:  document.f.outcome.value="You win!";  break;  case 2:  case 3:  case 12:  document.f.outcome.value="You lose!";  break;  default:  point = sum;  document.f.pv.value=point;  firstturn = false;  document.f.stage.value="Need follow-up throw.";  document.f.outcome.value=" ";  }  }  else {  switch(sum) {  case point:  document.f.outcome.value="You win!";  document.f.stage.value="Back to first throw.";  document.f.pv.value=" ";  firstturn = true;  break;  case 7:  document.f.outcome.value="You lose!";  document.f.stage.value="Back to first throw.";  document.f.pv.value=" ";  firstturn = true;  }  } } function drawface(n) {  ctx = document.getElementById(\'canvas\').getContext(\'2d\');   ctx.lineWidth = 5;  ctx.clearRect(dx,dy,dicewidth,diceheight);  ctx.strokeRect(dx,dy,dicewidth,diceheight)  var dotx;  var doty;  ctx.fillStyle = "#009966";  switch(n) {  case 1:  draw1();  break;  case 2:  draw2();  break;  case 3:  draw2();  draw1();  break;  case 4:  draw4();  break;  case 5:  draw4();  draw1();  break;  case 6:  draw4();  draw2mid();  break;    } } function draw1() {  var dotx;  var doty;  ctx.beginPath();  dotx = dx + .5*dicewidth;  doty = dy + .5*diceheight;  ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);  ctx.closePath();  ctx.fill(); } function draw2() {  var dotx;  var doty;  ctx.beginPath();  dotx = dx + 3*dotrad;  doty = dy + 3*dotrad;  ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);  dotx = dx+dicewidth-3*dotrad;  doty = dy+diceheight-3*dotrad;  ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);  ctx.closePath();  ctx.fill(); } function draw4() {  var dotx;  var doty;  ctx.beginPath();  dotx = dx + 3*dotrad;  doty = dy + 3*dotrad;  ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);  dotx = dx+dicewidth-3*dotrad;  doty = dy+diceheight-3*dotrad;  ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);  ctx.closePath();  ctx.fill();  ctx.beginPath();  dotx = dx + 3*dotrad;  doty = dy + diceheight-3*dotrad; //no change  ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);  dotx = dx+dicewidth-3*dotrad;  doty = dy+ 3*dotrad;  ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);  ctx.closePath();  ctx.fill();  } function draw2mid() {  var dotx;  var doty;  ctx.beginPath();  dotx = dx + 3*dotrad;  doty = dy + .5*diceheight;  ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);  dotx = dx+dicewidth-3*dotrad;  doty = dy + .5*diceheight; //no change  ctx.arc(dotx,doty,dotrad,0,Math.PI*2,true);  ctx.closePath();  ctx.fill(); } // ]]></script> <p><canvas height="300" id="canvas" width="400"> Your browser doesn\'t support the HTML5 element canvas. </canvas> <br> <button onclick="throwdice();">Throw dice </button></p> <form id="f" name="f"> <p>Stage: <input name="stage" type="text" value="First Throw"> Point: <input name="pv" type="text" value=" "> Outcome: <input name="outcome" type="text" value=" "></p> </form> \n', 'tags': '', 'url': 'Welcome.html'}, {'title': '近端配置與管理', 'text': 'chrome proxy設定 \n \n mde.tw \n \n github.com \n githib網站的標示 \n \n git add . \n \n git commit -m "commit description" \n \n git push \n \n local python wsgi.py \n \n', 'tags': '', 'url': '近端配置與管理.html'}, {'title': 'game1', 'text': "\xa0 \n \n  Your browser doesn't support the HTML5 element canvas.      Throw dice  \n Stage:   Point:   Outcome: ", 'tags': '', 'url': 'game1.html'}, {'title': 'game2', 'text': 'Try it \n \n \n', 'tags': '', 'url': 'game2.html'}, {'title': 'WEEK4', 'text': '本週課程在說明如何利用\xa0 Github Pages \xa0 與 \xa0 CMSimfly , 建立個人的靜態網際內容管理系統。進度內容及影片取自 https://2019wcm.blogspot.com/ 網際內容管理網誌。 Demo  網站:\xa0 https://mdecourse.github.io/2019wcmj 此處所謂的靜態網際內容管理指 \xa0 Github Pages \xa0目前只允許伺服倉儲中特定分支的特定目錄中的超文件, 亦即\xa0 Html \xa0 檔案與 \xa0 Javascript \xa0 程式檔案, 而  CMSimfly  的靜態網頁就是利用  Python  程式, 設法將原本的動態網站系統的內容轉為超文件與  Javascript  後, 單獨儲存在  content  目錄下, 然後透過倉儲根目錄中的  index.html  進行跳轉至  content/index.html , 但是  CMSimfly  倉儲中仍然保留所有動態系統的  Python  程式與設定, 可上傳至其他支援執行  Python  的網際應用伺服器 (例如 :\xa0 Heroku ), 並以動態的網站格式型態, 讓管理者登入進行內容管理. \n', 'tags': '', 'url': 'WEEK4.html'}, {'title': 'WEEK5', 'text': '加入相關內容: 導入 Ungit、利用 \xa0 kungit.bat \xa0 在倉儲目錄中啟用 ungit、自製可攜系統、納入\xa0 ShareX \xa0 的可攜系統、建立\xa0 Blogger \xa0 網誌、建立 Github 倉儲、建立\xa0 Github Pages \xa0 網站、利用\xa0 CMSimfly \xa0 以及 \xa0 Github Pages \xa0 建立網際內容管理系統、以 ssh 連線對 Github 倉儲改版、加入 y:\\home\\.ssh\\config 設定, 讓 ssh 連線透過 Proxy Server 擷取資料以及IPv6 環境設定與 Git 操作設定。 \n', 'tags': '', 'url': 'WEEK5.html'}, {'title': 'WEEK8', 'text': '', 'tags': '', 'url': 'WEEK8.html'}, {'title': '期中影片', 'text': '', 'tags': '', 'url': '期中影片.html'}]};